{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr1 = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_003\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_004\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  _s();\n\n  var taskName = \"\",\n      taskDate = \"\",\n      taskTime = \"\";\n\n  var appendToArr = task => {\n    const newTask = {\n      taskName: task.taskName,\n      taskTime: `${task.taskTime}||${task.taskDate}`\n    };\n  };\n\n  const [taskArr, setTaskArr] = useState(taskArr1);\n  useState(taskArr.push());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task name here\",\n        onChange: val => {\n          taskName = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        onChange: val => {\n          taskDate = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        id: \"time\",\n        onChange: val => {\n          taskTime = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => appendToArr({\n          taskName,\n          taskDate,\n          taskTime\n        }),\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), taskArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(Events, {\n        data: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n} // var appendToArr1 = () => {\n//   taskArr.push({\n//     taskName: \"Task_005\",\n//     taskTime: timeAndDate(),\n//   });\n// };\n\n\n_s(Output, \"CGHHw+O8E1LYOaRP0FvAUh+q4Rs=\");\n\n_c = Output;\n\nfunction Input() {}\n\n_c2 = Input;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","useState","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","taskArr1","taskName","taskTime","Output","taskDate","appendToArr","task","newTask","taskArr","setTaskArr","push","val","target","value","map","Input","Events","props","data","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr1 = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate(),\n  },\n];\nfunction Output() {\n  var taskName = \"\",\n    taskDate = \"\",\n    taskTime = \"\";\n  var appendToArr = (task) => {\n    const newTask = {\n      taskName: task.taskName,\n      taskTime: `${task.taskTime}||${task.taskDate}`,\n    };\n  };\n  const [taskArr, setTaskArr] = useState(taskArr1);\n  useState(taskArr.push());\n  return (\n    <div className=\"tasks\">\n      <>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task name here\"\n          onChange={(val) => {\n            taskName = val.target.value;\n          }}\n        />\n        <input\n          type=\"date\"\n          id=\"date\"\n          onChange={(val) => {\n            taskDate = val.target.value;\n          }}\n        />\n        <input\n          type=\"time\"\n          id=\"time\"\n          onChange={(val) => {\n            taskTime = val.target.value;\n          }}\n        />\n        <button\n          type=\"button\"\n          onClick={() => appendToArr({ taskName, taskDate, taskTime })}\n        >\n          ADD\n        </button>\n      </>\n      {taskArr.map((task) => {\n        return <Events data={task} />;\n      })}\n    </div>\n  );\n}\n// var appendToArr1 = () => {\n//   taskArr.push({\n//     taskName: \"Task_005\",\n//     taskTime: timeAndDate(),\n//   });\n// };\nfunction Input() {}\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <div className=\"task\">\n      <div>{taskName}</div>\n      <div>{taskTime}</div>\n      <button /*onClick={() => appendToArr1()}*/>DELETE</button>\n    </div>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}