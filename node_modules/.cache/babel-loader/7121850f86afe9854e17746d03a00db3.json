{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_003\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_004\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  _s();\n\n  const [taskArr, setTaskArr] = useState(taskArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), taskArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(Events, {\n        data: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} // var appendToArr1 = () => {\n//   taskArr.push({\n//     taskName: \"Task_005\",\n//     taskTime: timeAndDate(),\n//   });\n// };\n\n\n_s(Output, \"WpE/FTjGm1/rBM/tCPW5xii0hGU=\");\n\n_c = Output;\n\nfunction Input() {\n  var appendToArr = task => {\n    const newTask = {\n      taskName: task.taskName,\n      taskTime: `${task.taskTime}||${task.taskDate}`\n    };\n    console.log(newTask);\n  };\n\n  var taskName = \"\",\n      taskDate = \"\",\n      taskTime = \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task name here\",\n      onChange: val => {\n        taskName = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      onChange: val => {\n        taskDate = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      id: \"time\",\n      onChange: val => {\n        taskTime = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => appendToArr({\n        taskName,\n        taskDate,\n        taskTime\n      }),\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Input;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","useState","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","taskArr","taskName","taskTime","Output","setTaskArr","map","task","Input","appendToArr","newTask","taskDate","console","log","val","target","value","Events","props","data","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate(),\n  },\n];\nfunction Output() {\n  const [taskArr, setTaskArr] = useState(taskArr);\n  return (\n    <div className=\"tasks\">\n      <Input />\n      {taskArr.map((task) => {\n        return <Events data={task} />;\n      })}\n    </div>\n  );\n}\n// var appendToArr1 = () => {\n//   taskArr.push({\n//     taskName: \"Task_005\",\n//     taskTime: timeAndDate(),\n//   });\n// };\nfunction Input() {\n  var appendToArr = (task) => {\n    const newTask = {\n      taskName: task.taskName,\n      taskTime: `${task.taskTime}||${task.taskDate}`,\n    };\n    console.log(newTask);\n  };\n\n  var taskName = \"\",\n    taskDate = \"\",\n    taskTime = \"\";\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Enter task name here\"\n        onChange={(val) => {\n          taskName = val.target.value;\n        }}\n      />\n      <input\n        type=\"date\"\n        id=\"date\"\n        onChange={(val) => {\n          taskDate = val.target.value;\n        }}\n      />\n      <input\n        type=\"time\"\n        id=\"time\"\n        onChange={(val) => {\n          taskTime = val.target.value;\n        }}\n      />\n      <button\n        type=\"button\"\n        onClick={() => appendToArr({ taskName, taskDate, taskTime })}\n      >\n        ADD\n      </button>\n    </>\n  );\n}\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <div className=\"task\">\n      <div>{taskName}</div>\n      <div>{taskTime}</div>\n      <button /*onClick={() => appendToArr1()}*/>DELETE</button>\n    </div>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}