{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} || ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n};\n\nvar taskArr = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(Events, {\n        data: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Output;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"task\", {\n    children: [/*#__PURE__*/_jsxDEV(\"taskName\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"taskTime\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","ReactDOM","timeAndDate","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","taskArr","taskName","taskTime","Output","map","task","Events","props","data","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AACA,IAAIC,WAAW,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,SAAQ,GAAED,IAAI,CAACE,OAAL,EAAe,IAAGF,IAAI,CAACG,QAAL,EAAgB,IAAGH,IAAI,CAACI,WAAL,EAAmB,OAAMJ,IAAI,CAACK,QAAL,EAAgB,IAAGL,IAAI,CAACM,UAAL,EAAkB,IAAGN,IAAI,CAACO,UAAL,EAAkB,EAAlI;AACD,CAHD;;AAIA,IAAIC,OAAO,GAAG,CACZ;AACEC,EAAAA,QAAQ,EAAE,UADZ;AAEEC,EAAAA,QAAQ,EAAEX,WAAW;AAFvB,CADY,EAKZ;AACEU,EAAAA,QAAQ,EAAE,UADZ;AAEEC,EAAAA,QAAQ,EAAEX,WAAW;AAFvB,CALY,CAAd;;AAWA,SAASY,MAAT,GAAkB;AAChB,sBACE;AAAA,cACGH,OAAO,CAACI,GAAR,CAAaC,IAAD,IAAU;AACrB,0BAAO,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQF,M;;AAST,SAASG,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAI;AAAEN,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBK,KAAK,CAACC,IAAnC;AACA,sBACE;AAAA,4BACE;AAAA,gBAAWP;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MATQI,M;AAUThB,QAAQ,CAACmB,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} || ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n};\nvar taskArr = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n];\n\nfunction Output() {\n  return (\n    <div>\n      {taskArr.map((task) => {\n        return <Events data={task} />;\n      })}\n    </div>\n  );\n}\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <task>\n      <taskName>{taskName}</taskName>\n      <taskTime>{taskTime}</taskTime>\n      <button>X</button>\n    </task>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}