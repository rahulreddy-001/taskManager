{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_003\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_004\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  return /*#__PURE__*/_jsxDEV(Tasks, {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), taskArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(Events, {\n        data: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Output;\n\nvar appendToArr = taskName => {\n  //   const taskName = nameInput.value();\n  //   const dateValue = dateInput.value();\n  //   const timeValue = timeInput.value();\n  alert(taskName);\n};\n\nfunction Input() {\n  var taskName = \"\",\n      taskDate = \"\",\n      taskTime = \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeHolder: \"Enter task name here\",\n      onChange: val => {\n        taskName = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      onChange: val => {\n        taskDate = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      id: \"time\",\n      onChange: val => {\n        taskTime = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => appendToArr({\n        taskName,\n        taskDate,\n        taskTime\n      })\n      /*console.log()*/\n      ,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Input;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n} // const nameInput = document.querySelector(\"#taskName\");\n// const dateInput = document.querySelector(\"#date\");\n// const timeInput = document.querySelector(\"#time\");\n// const addBtn = document.querySelector(\"#addBtn\");\n// addBtn.addEventListener(\"click\", appendToArr, \"flase\");\n\n\n_c3 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","taskArr","taskName","taskTime","Output","map","task","appendToArr","alert","Input","taskDate","val","target","value","Events","props","data","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar taskArr = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate(),\n  },\n];\n\nfunction Output() {\n  return (\n    <Tasks className=\"tasks\">\n      <Input />\n      {taskArr.map((task) => {\n        return <Events data={task} />;\n      })}\n    </Tasks>\n  );\n}\nvar appendToArr = (taskName) => {\n  //   const taskName = nameInput.value();\n  //   const dateValue = dateInput.value();\n  //   const timeValue = timeInput.value();\n  alert(taskName);\n};\nfunction Input() {\n  var taskName = \"\",\n    taskDate = \"\",\n    taskTime = \"\";\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeHolder=\"Enter task name here\"\n        onChange={(val) => {\n          taskName = val.target.value;\n        }}\n      />\n      <input\n        type=\"date\"\n        id=\"date\"\n        onChange={(val) => {\n          taskDate = val.target.value;\n        }}\n      />\n      <input\n        type=\"time\"\n        id=\"time\"\n        onChange={(val) => {\n          taskTime = val.target.value;\n        }}\n      />\n      <button\n        type=\"button\"\n        onClick={\n          () => appendToArr({ taskName, taskDate, taskTime }) /*console.log()*/\n        }\n      >\n        ADD\n      </button>\n    </>\n  );\n}\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <div className=\"task\">\n      <div>{taskName}</div>\n      <div>{taskTime}</div>\n      <button>DELETE</button>\n    </div>\n  );\n}\n\n// const nameInput = document.querySelector(\"#taskName\");\n// const dateInput = document.querySelector(\"#date\");\n// const timeInput = document.querySelector(\"#time\");\n// const addBtn = document.querySelector(\"#addBtn\");\n\n// addBtn.addEventListener(\"click\", appendToArr, \"flase\");\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}