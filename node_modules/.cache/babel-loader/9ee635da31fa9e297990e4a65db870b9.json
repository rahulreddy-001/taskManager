{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nvar sampleArr = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_003\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_004\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  _s();\n\n  var taskName = \"\",\n      taskDate = \"\",\n      taskTime = \"\";\n  const [taskArr, setTaskArr] = useState(sampleArr);\n\n  var appendToArr = taskObj => {\n    const newTask = {\n      taskName: taskObj.taskName,\n      taskTime: `${taskObj.taskTime}   ${taskObj.taskDate.getFullYear()}`\n    };\n    setTaskArr(arr => [...arr, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group flex-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"input-group-text\",\n        id: \"addon-wrapping\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Enter task here\",\n        \"aria-label\": \"Username\",\n        \"aria-describedby\": \"addon-wrapping\",\n        onChange: val => {\n          taskName = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group flex-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"input-group-text\",\n        id: \"addon-wrapping\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-control\",\n        placeholder: \"Enter task here\",\n        \"aria-label\": \"Username\",\n        \"aria-describedby\": \"addon-wrapping\",\n        type: \"date\",\n        \"data-date-format\": \"DD MMMM YYYY\",\n        id: \"date\",\n        onChange: val => {\n          taskDate = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group flex-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"input-group-text\",\n        id: \"addon-wrapping\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-control\",\n        placeholder: \"Enter task here\",\n        \"aria-label\": \"Username\",\n        \"aria-describedby\": \"addon-wrapping\",\n        id: \"date\",\n        type: \"time\",\n        id: \"time\",\n        onChange: val => {\n          taskTime = val.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      onClick: () => appendToArr({\n        taskName,\n        taskDate,\n        taskTime\n      }),\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: taskArr.map(taskObj1 => {\n        return /*#__PURE__*/_jsxDEV(Events, {\n          data: taskObj1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Output, \"h7eJBEtGg0mGQvfd3y+iyUxjUfs=\");\n\n_c = Output;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-close\",\n      \"aria-label\": \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","useState","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","sampleArr","taskName","taskTime","Output","taskDate","taskArr","setTaskArr","appendToArr","taskObj","newTask","arr","val","target","value","map","taskObj1","Events","props","data","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\nvar sampleArr = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate(),\n  },\n];\nfunction Output() {\n  var taskName = \"\",\n    taskDate = \"\",\n    taskTime = \"\";\n  const [taskArr, setTaskArr] = useState(sampleArr);\n  var appendToArr = (taskObj) => {\n    const newTask = {\n      taskName: taskObj.taskName,\n      taskTime: `${taskObj.taskTime}   ${taskObj.taskDate.getFullYear()}`,\n    };\n    setTaskArr((arr) => [...arr, newTask]);\n  };\n  return (\n    <div className=\"tasks\">\n      <div class=\"input-group flex-nowrap\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">\n          Task\n        </span>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter task here\"\n          aria-label=\"Username\"\n          aria-describedby=\"addon-wrapping\"\n          onChange={(val) => {\n            taskName = val.target.value;\n          }}\n        />\n      </div>\n      <div class=\"input-group flex-nowrap\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">\n          Date\n        </span>\n        <input\n          class=\"form-control\"\n          placeholder=\"Enter task here\"\n          aria-label=\"Username\"\n          aria-describedby=\"addon-wrapping\"\n          type=\"date\"\n          data-date-format=\"DD MMMM YYYY\"\n          id=\"date\"\n          onChange={(val) => {\n            taskDate = val.target.value;\n          }}\n        />\n      </div>\n      <div class=\"input-group flex-nowrap\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">\n          Time\n        </span>\n        <input\n          class=\"form-control\"\n          placeholder=\"Enter task here\"\n          aria-label=\"Username\"\n          aria-describedby=\"addon-wrapping\"\n          id=\"date\"\n          type=\"time\"\n          id=\"time\"\n          onChange={(val) => {\n            taskTime = val.target.value;\n          }}\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        onClick={() => appendToArr({ taskName, taskDate, taskTime })}\n      >\n        ADD\n      </button>\n\n      <>\n        {taskArr.map((taskObj1) => {\n          return <Events data={taskObj1} />;\n        })}\n      </>\n    </div>\n  );\n}\n\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <div className=\"task\">\n      <div>{taskName}</div>\n      <div>{taskTime}</div>\n      <button type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n    </div>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}