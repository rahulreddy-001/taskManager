{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} || ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nconst nameInput = document.querySelector(\"#taskName\");\nconst dateInput = document.querySelector(\"#date\");\nconst timeInput = document.querySelector(\"#time\");\nconst addBtn = document.querySelector(\"#addBtn\");\n\nconst appendToArr = () => {\n  const taskName = nameInput.value();\n  const dateValue = dateInput.value();\n  const timeValue = timeInput.value();\n  console.log(taskName);\n};\n\naddBtn.addEventListener(\"click\", appendToArr, \"false\");\nvar taskArr = [{\n  taskName: \"Task_001\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_002\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_003\",\n  taskTime: timeAndDate()\n}, {\n  taskName: \"Task_004\",\n  taskTime: timeAndDate()\n}];\n\nfunction Output() {\n  return /*#__PURE__*/_jsxDEV(\"tasks\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), taskArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(Events, {\n        data: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Output;\n\nfunction Input() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeHolder: \"Enter task name here\",\n      id: \"taskName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      id: \"time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addBtn\",\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Input;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"task\", {\n    children: [/*#__PURE__*/_jsxDEV(\"taskName\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"taskTime\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","nameInput","document","querySelector","dateInput","timeInput","addBtn","appendToArr","taskName","value","dateValue","timeValue","console","log","addEventListener","taskArr","taskTime","Output","map","task","Input","Events","props","data","render","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} || ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\nconst nameInput = document.querySelector(\"#taskName\");\nconst dateInput = document.querySelector(\"#date\");\nconst timeInput = document.querySelector(\"#time\");\nconst addBtn = document.querySelector(\"#addBtn\");\nconst appendToArr = () => {\n  const taskName = nameInput.value();\n  const dateValue = dateInput.value();\n  const timeValue = timeInput.value();\n  console.log(taskName);\n};\naddBtn.addEventListener(\"click\", appendToArr, \"false\");\n\nvar taskArr = [\n  {\n    taskName: \"Task_001\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate(),\n  },\n  {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate(),\n  },\n];\n\nfunction Output() {\n  return (\n    <tasks className=\"tasks\">\n      <Input />\n      {taskArr.map((task) => {\n        return <Events data={task} />;\n      })}\n    </tasks>\n  );\n}\nfunction Input() {\n  return (\n    <>\n      <input type=\"text\" placeHolder=\"Enter task name here\" id=\"taskName\" />\n      <input type=\"date\" id=\"date\" />\n      <input type=\"time\" id=\"time\" />\n      <button id=\"addBtn\">ADD</button>\n    </>\n  );\n}\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <task>\n      <taskName>{taskName}</taskName>\n      <taskTime>{taskTime}</taskTime>\n      <button>DELETE</button>\n    </task>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}