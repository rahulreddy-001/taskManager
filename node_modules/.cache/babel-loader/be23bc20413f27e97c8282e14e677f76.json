{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\React_App\\\\task-manager\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nfunction Output() {\n  _s();\n\n  var taskName = \"\",\n      taskDate = \"\",\n      taskTime = \"\";\n  var taskArr1 = [{\n    taskName: \"Task_001\",\n    taskTime: timeAndDate()\n  }, {\n    taskName: \"Task_002\",\n    taskTime: timeAndDate()\n  }, {\n    taskName: \"Task_003\",\n    taskTime: timeAndDate()\n  }, {\n    taskName: \"Task_004\",\n    taskTime: timeAndDate()\n  }];\n  const [taskArr, setTaskArr] = useState(taskArr1);\n\n  var appendToArr = taskObj => {\n    const newTask = {\n      taskName: taskObj.taskName,\n      taskTime: `${taskObj.taskTime}||${taskObj.taskDate}`\n    };\n    setTaskArr(taskArr.push(newTask));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task name here\",\n      onChange: val => {\n        taskName = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      onChange: val => {\n        taskDate = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      id: \"time\",\n      onChange: val => {\n        taskTime = val.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => appendToArr({\n        taskName,\n        taskDate,\n        taskTime\n      }),\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: taskArr.map(taskObj1 => {\n        return /*#__PURE__*/_jsxDEV(Events, {\n          data: taskObj1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Output, \"zgcIUropyTX4L3ai6jB2rVbIQGI=\");\n\n_c = Output;\n\nfunction Events(props) {\n  var {\n    taskName,\n    taskTime\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Events;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Output\");\n$RefreshReg$(_c2, \"Events\");","map":{"version":3,"sources":["C:/Users/rahul/Documents/React_App/task-manager/src/index.js"],"names":["React","useState","ReactDOM","timeAndDate","date","Date","value_","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","Output","taskName","taskDate","taskTime","taskArr1","taskArr","setTaskArr","appendToArr","taskObj","newTask","push","val","target","value","map","taskObj1","Events","props","data","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nvar timeAndDate = () => {\n  const date = new Date();\n  const value_ = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}   ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n  return value_;\n};\n\nfunction Output() {\n  var taskName = \"\",\n    taskDate = \"\",\n    taskTime = \"\";\n  var taskArr1 = [\n    {\n      taskName: \"Task_001\",\n      taskTime: timeAndDate(),\n    },\n    {\n      taskName: \"Task_002\",\n      taskTime: timeAndDate(),\n    },\n    {\n      taskName: \"Task_003\",\n      taskTime: timeAndDate(),\n    },\n    {\n      taskName: \"Task_004\",\n      taskTime: timeAndDate(),\n    },\n  ];\n  const [taskArr, setTaskArr] = useState(taskArr1);\n  var appendToArr = (taskObj) => {\n    const newTask = {\n      taskName: taskObj.taskName,\n      taskTime: `${taskObj.taskTime}||${taskObj.taskDate}`,\n    };\n    setTaskArr(taskArr.push(newTask));\n  };\n  return (\n    <div className=\"tasks\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter task name here\"\n        onChange={(val) => {\n          taskName = val.target.value;\n        }}\n      />\n      <input\n        type=\"date\"\n        id=\"date\"\n        onChange={(val) => {\n          taskDate = val.target.value;\n        }}\n      />\n      <input\n        type=\"time\"\n        id=\"time\"\n        onChange={(val) => {\n          taskTime = val.target.value;\n        }}\n      />\n      <button\n        type=\"button\"\n        onClick={() => appendToArr({ taskName, taskDate, taskTime })}\n      >\n        ADD\n      </button>\n      <>\n        {taskArr.map((taskObj1) => {\n          return <Events data={taskObj1} />;\n        })}\n      </>\n    </div>\n  );\n}\n\nfunction Events(props) {\n  var { taskName, taskTime } = props.data;\n  return (\n    <div className=\"task\">\n      <div>{taskName}</div>\n      <div>{taskTime}</div>\n      <button /*onClick={() => appendToArr1()}*/>DELETE</button>\n    </div>\n  );\n}\nReactDOM.render(<Output />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}